version: "3.2"
services:

  minio:
    image: bitnami/minio
    ports: 
      - '9000:9000'
      - '9001:9001'
    environment:
      MINIO_ROOT_USER: minioUser
      MINIO_ROOT_PASSWORD: minioPassword
      MINIO_SERVER_HOST: localhost
      MINIO_SCHEME: http
      MINIO_API_CORS_ALLOW_ORIGIN: '*'
    networks:
      - mynet
  
  mc: 
    image: minio/mc
    container_name: host
    depends_on: 
      - minio
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc config host add --api s3v4 minio http://minio:9000/ minioUser minioPassword;
      /usr/bin/mc rm -r --force minio/first-bucket;
      /usr/bin/mc mb -p minio/first-bucket;
      /usr/bin/mc admin policy set public minio/first-bucket;
      /usr/bin/mc admin trace minio -a --debug;
      "
    networks:
      - mynet 

  mongodb:
    image: mongo:latest
    container_name: 'mongodb'
    ports:
      - 27017:27017
    networks:
      - mynet

  rabbitmq:
    image: rabbitmq:3.8-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
      - 15672:15672
    networks:
      - mynet

  backend:    
    restart: always
    build:
      context: ./
    volumes:
      - .:/src
    depends_on:
      - rabbitmq
      - mongodb
      - minio
    environment:
      PORT: 4000
      MONGO_URL: mongodb://mongodb:27017/mydb
      TOKEN_SECRET: f6f40e0d-7141-466d-8339-5429a4df6a97
      AMQP_URL: amqp://guest:guest@rabbitmq:5672
      BUCKET_HOST: http://localhost:9000/
      BUCKET_ENDPOINT: http://minio:9000/
      BUCKET_ACCESS_KEY: minioUser
      BUCKET_SECRET_KEY: minioPassword
    ports:
        - 4000:4000
    networks:
      - mynet

networks:
  mynet:
    driver: bridge 